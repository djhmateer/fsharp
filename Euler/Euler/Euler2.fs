//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

module Euler2

printfn "Hello Euler2"

//for i in 1..10 do
let mutable currentSum = 0
let mutable i = 0
let mutable p1 = 0
let mutable p2 = 0
let mutable result = 0

while currentSum <= 4000000 do
    if i = 1 then 
        p1 <- 1
        p2 <- 0
    if i = 2 then 
        p1 <- 1
        p2 <- 1
    currentSum <- p1+p2
    printfn "%A" currentSum
    // setting previous1 and 2
    p2 <- p1
    p1 <- currentSum

    i <- (i + 1)

    let isEven a = a%2 = 0
    if isEven currentSum then
        result <- result + currentSum
    
printfn "%A" result
// 4,613,732